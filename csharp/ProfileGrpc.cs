// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: profile.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Etg.Profile {
  public static class Profile
  {
    static readonly string __ServiceName = "etg.profile.Profile";

    static readonly Marshaller<global::Etg.Profile.UpdateProfileRequest> __Marshaller_UpdateProfileRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Etg.Profile.UpdateProfileRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Etg.Profile.UpdateProfileResponse> __Marshaller_UpdateProfileResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Etg.Profile.UpdateProfileResponse.Parser.ParseFrom);

    static readonly Method<global::Etg.Profile.UpdateProfileRequest, global::Etg.Profile.UpdateProfileResponse> __Method_UpdateProfile = new Method<global::Etg.Profile.UpdateProfileRequest, global::Etg.Profile.UpdateProfileResponse>(
        MethodType.Unary,
        __ServiceName,
        "UpdateProfile",
        __Marshaller_UpdateProfileRequest,
        __Marshaller_UpdateProfileResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Etg.Profile.ProfileReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Profile</summary>
    public abstract class ProfileBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Etg.Profile.UpdateProfileResponse> UpdateProfile(global::Etg.Profile.UpdateProfileRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Profile</summary>
    public class ProfileClient : ClientBase<ProfileClient>
    {
      /// <summary>Creates a new client for Profile</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ProfileClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Profile that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ProfileClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ProfileClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ProfileClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Etg.Profile.UpdateProfileResponse UpdateProfile(global::Etg.Profile.UpdateProfileRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateProfile(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Etg.Profile.UpdateProfileResponse UpdateProfile(global::Etg.Profile.UpdateProfileRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateProfile, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Etg.Profile.UpdateProfileResponse> UpdateProfileAsync(global::Etg.Profile.UpdateProfileRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateProfileAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Etg.Profile.UpdateProfileResponse> UpdateProfileAsync(global::Etg.Profile.UpdateProfileRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateProfile, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ProfileClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ProfileClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(ProfileBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_UpdateProfile, serviceImpl.UpdateProfile).Build();
    }

  }
}
#endregion
