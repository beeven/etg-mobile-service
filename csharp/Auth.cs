// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auth.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Etg.Auth {

  /// <summary>Holder for reflection information generated from auth.proto</summary>
  public static partial class AuthReflection {

    #region Descriptor
    /// <summary>File descriptor for auth.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuthReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgphdXRoLnByb3RvEghldGcuYXV0aBoNcHJvZmlsZS5wcm90bxofZ29vZ2xl",
            "L3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byK7AQoMTG9naW5SZXF1ZXN0EicK",
            "CmxvZ2luX3R5cGUYASABKA4yEy5ldGcuYXV0aC5Mb2dpblR5cGUSDQoFZW1h",
            "aWwYAiABKAkSFQoNaGFzaGVkX3Bhc3N3ZBgDIAEoCRISCgpjb21wYW55X2lk",
            "GAQgASgJEg0KBXRva2VuGAUgASgJEhQKDGFjY2Vzc190b2tlbhgGIAEoCRIS",
            "CgpjYXB0Y2hhX2lkGAcgASgJEg8KB2NhcHRjaGEYCCABKAki2QEKCkxvZ2lu",
            "UmVwbHkSFQoNaXNfc3VjY2Vzc2Z1bBgBIAEoCBIPCgdtZXNzYWdlGAIgASgJ",
            "EhQKDGFjY2Vzc190b2tlbhgDIAEoCRI3ChN0aW1lc3RhbXBfZXhwaXJlX2F0",
            "GAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBImCgR1c2VyGAUg",
            "ASgLMhguZXRnLnByb2ZpbGUuVXNlclByb2ZpbGUSLAoHY29tcGFueRgGIAEo",
            "CzIbLmV0Zy5wcm9maWxlLkNvbXBhbnlQcm9maWxlKjgKCUxvZ2luVHlwZRIJ",
            "CgVFTUFJTBAAEg4KCkNPTVBBTllfSUQQARIQCgxBQ0NFU1NfVE9LRU4QAkIn",
            "CghldGcuYXV0aEIIRXRnUHJvdG9QAaICA0VUR6oCCEV0Zy5BdXRoUABiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Etg.Profile.ProfileReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Etg.Auth.LoginType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Etg.Auth.LoginRequest), global::Etg.Auth.LoginRequest.Parser, new[]{ "LoginType", "Email", "HashedPasswd", "CompanyId", "Token", "AccessToken", "CaptchaId", "Captcha" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Etg.Auth.LoginReply), global::Etg.Auth.LoginReply.Parser, new[]{ "IsSuccessful", "Message", "AccessToken", "TimestampExpireAt", "User", "Company" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum LoginType {
    [pbr::OriginalName("EMAIL")] Email = 0,
    [pbr::OriginalName("COMPANY_ID")] CompanyId = 1,
    [pbr::OriginalName("ACCESS_TOKEN")] AccessToken = 2,
  }

  #endregion

  #region Messages
  public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Etg.Auth.AuthReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      loginType_ = other.loginType_;
      email_ = other.email_;
      hashedPasswd_ = other.hashedPasswd_;
      companyId_ = other.companyId_;
      token_ = other.token_;
      accessToken_ = other.accessToken_;
      captchaId_ = other.captchaId_;
      captcha_ = other.captcha_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "login_type" field.</summary>
    public const int LoginTypeFieldNumber = 1;
    private global::Etg.Auth.LoginType loginType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Etg.Auth.LoginType LoginType {
      get { return loginType_; }
      set {
        loginType_ = value;
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 2;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hashed_passwd" field.</summary>
    public const int HashedPasswdFieldNumber = 3;
    private string hashedPasswd_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HashedPasswd {
      get { return hashedPasswd_; }
      set {
        hashedPasswd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "company_id" field.</summary>
    public const int CompanyIdFieldNumber = 4;
    private string companyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 5;
    private string token_ = "";
    /// <summary>
    ///  token sent to contact's mobile
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "access_token" field.</summary>
    public const int AccessTokenFieldNumber = 6;
    private string accessToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "captcha_id" field.</summary>
    public const int CaptchaIdFieldNumber = 7;
    private string captchaId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CaptchaId {
      get { return captchaId_; }
      set {
        captchaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "captcha" field.</summary>
    public const int CaptchaFieldNumber = 8;
    private string captcha_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Captcha {
      get { return captcha_; }
      set {
        captcha_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LoginType != other.LoginType) return false;
      if (Email != other.Email) return false;
      if (HashedPasswd != other.HashedPasswd) return false;
      if (CompanyId != other.CompanyId) return false;
      if (Token != other.Token) return false;
      if (AccessToken != other.AccessToken) return false;
      if (CaptchaId != other.CaptchaId) return false;
      if (Captcha != other.Captcha) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LoginType != 0) hash ^= LoginType.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (HashedPasswd.Length != 0) hash ^= HashedPasswd.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      if (CaptchaId.Length != 0) hash ^= CaptchaId.GetHashCode();
      if (Captcha.Length != 0) hash ^= Captcha.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LoginType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LoginType);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Email);
      }
      if (HashedPasswd.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HashedPasswd);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CompanyId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Token);
      }
      if (AccessToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AccessToken);
      }
      if (CaptchaId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CaptchaId);
      }
      if (Captcha.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Captcha);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LoginType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LoginType);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (HashedPasswd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HashedPasswd);
      }
      if (CompanyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (AccessToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (CaptchaId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CaptchaId);
      }
      if (Captcha.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Captcha);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.LoginType != 0) {
        LoginType = other.LoginType;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.HashedPasswd.Length != 0) {
        HashedPasswd = other.HashedPasswd;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      if (other.CaptchaId.Length != 0) {
        CaptchaId = other.CaptchaId;
      }
      if (other.Captcha.Length != 0) {
        Captcha = other.Captcha;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            loginType_ = (global::Etg.Auth.LoginType) input.ReadEnum();
            break;
          }
          case 18: {
            Email = input.ReadString();
            break;
          }
          case 26: {
            HashedPasswd = input.ReadString();
            break;
          }
          case 34: {
            CompanyId = input.ReadString();
            break;
          }
          case 42: {
            Token = input.ReadString();
            break;
          }
          case 50: {
            AccessToken = input.ReadString();
            break;
          }
          case 58: {
            CaptchaId = input.ReadString();
            break;
          }
          case 66: {
            Captcha = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginReply : pb::IMessage<LoginReply> {
    private static readonly pb::MessageParser<LoginReply> _parser = new pb::MessageParser<LoginReply>(() => new LoginReply());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Etg.Auth.AuthReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply(LoginReply other) : this() {
      isSuccessful_ = other.isSuccessful_;
      message_ = other.message_;
      accessToken_ = other.accessToken_;
      TimestampExpireAt = other.timestampExpireAt_ != null ? other.TimestampExpireAt.Clone() : null;
      User = other.user_ != null ? other.User.Clone() : null;
      Company = other.company_ != null ? other.Company.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply Clone() {
      return new LoginReply(this);
    }

    /// <summary>Field number for the "is_successful" field.</summary>
    public const int IsSuccessfulFieldNumber = 1;
    private bool isSuccessful_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSuccessful {
      get { return isSuccessful_; }
      set {
        isSuccessful_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "access_token" field.</summary>
    public const int AccessTokenFieldNumber = 3;
    private string accessToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp_expire_at" field.</summary>
    public const int TimestampExpireAtFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestampExpireAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp TimestampExpireAt {
      get { return timestampExpireAt_; }
      set {
        timestampExpireAt_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 5;
    private global::Etg.Profile.UserProfile user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Etg.Profile.UserProfile User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "company" field.</summary>
    public const int CompanyFieldNumber = 6;
    private global::Etg.Profile.CompanyProfile company_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Etg.Profile.CompanyProfile Company {
      get { return company_; }
      set {
        company_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSuccessful != other.IsSuccessful) return false;
      if (Message != other.Message) return false;
      if (AccessToken != other.AccessToken) return false;
      if (!object.Equals(TimestampExpireAt, other.TimestampExpireAt)) return false;
      if (!object.Equals(User, other.User)) return false;
      if (!object.Equals(Company, other.Company)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsSuccessful != false) hash ^= IsSuccessful.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      if (timestampExpireAt_ != null) hash ^= TimestampExpireAt.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (company_ != null) hash ^= Company.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsSuccessful != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsSuccessful);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (AccessToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AccessToken);
      }
      if (timestampExpireAt_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TimestampExpireAt);
      }
      if (user_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(User);
      }
      if (company_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Company);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsSuccessful != false) {
        size += 1 + 1;
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (AccessToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (timestampExpireAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimestampExpireAt);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (company_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Company);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginReply other) {
      if (other == null) {
        return;
      }
      if (other.IsSuccessful != false) {
        IsSuccessful = other.IsSuccessful;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      if (other.timestampExpireAt_ != null) {
        if (timestampExpireAt_ == null) {
          timestampExpireAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        TimestampExpireAt.MergeFrom(other.TimestampExpireAt);
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Etg.Profile.UserProfile();
        }
        User.MergeFrom(other.User);
      }
      if (other.company_ != null) {
        if (company_ == null) {
          company_ = new global::Etg.Profile.CompanyProfile();
        }
        Company.MergeFrom(other.Company);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            IsSuccessful = input.ReadBool();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            AccessToken = input.ReadString();
            break;
          }
          case 34: {
            if (timestampExpireAt_ == null) {
              timestampExpireAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(timestampExpireAt_);
            break;
          }
          case 42: {
            if (user_ == null) {
              user_ = new global::Etg.Profile.UserProfile();
            }
            input.ReadMessage(user_);
            break;
          }
          case 50: {
            if (company_ == null) {
              company_ = new global::Etg.Profile.CompanyProfile();
            }
            input.ReadMessage(company_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
