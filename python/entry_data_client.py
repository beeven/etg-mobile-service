
"""The Python implementation of the gRPC route guide client."""

from __future__ import print_function
import grpc

import entry_data_pb2


def generate_entry_ids():
    """Generate ids iterator"""
    entryIds = ["518920160896053556", "516620160666505983",
                "518920160896053557", "51520160536088309"]
    for entry in entryIds:
        yield entry_data_pb2.GetEntryStatusRequest(entry_id=entry)


def query(stub):
    replies = stub.GetEntryStatus(generate_entry_ids())
    for reply in replies:
        print("{0}:{1}\t{2}".format(reply.entry_id,
                                    reply.status_text, reply.declare_date.ToDatetime()))


def run():
    
    credential = grpc.ssl_channel_credentials("""-----BEGIN CERTIFICATE-----
MIIFSzCCBDOgAwIBAgIJAK1eE69OSQpDMA0GCSqGSIb3DQEBBQUAMIHJMQswCQYD
VQQGEwJDTjESMBAGA1UECBMJR3Vhbmdkb25nMRIwEAYDVQQHEwlHdWFuZ3pob3Ux
JjAkBgNVBAoTHUd1YW5nemhvdSBDdXN0b21zIERhdGEgQ2VudGVyMSIwIAYDVQQL
ExlJVCBEZXZlbG9wbWVudCBEZXBhcnRtZW50MR8wHQYDVQQDExZlcG9ydC5nemN1
c3RvbXMuZ292LmNuMSUwIwYJKoZIhvcNAQkBFhZhZG1pbkBnemN1c3RvbXMuZ292
LmNuMB4XDTE2MTEwOTA4NDAzMVoXDTE5MTEwOTA4NDAzMlowgckxCzAJBgNVBAYT
AkNOMRIwEAYDVQQIEwlHdWFuZ2RvbmcxEjAQBgNVBAcTCUd1YW5nemhvdTEmMCQG
A1UEChMdR3Vhbmd6aG91IEN1c3RvbXMgRGF0YSBDZW50ZXIxIjAgBgNVBAsTGUlU
IERldmVsb3BtZW50IERlcGFydG1lbnQxHzAdBgNVBAMTFmVwb3J0Lmd6Y3VzdG9t
cy5nb3YuY24xJTAjBgkqhkiG9w0BCQEWFmFkbWluQGd6Y3VzdG9tcy5nb3YuY24w
ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDTIJTVIP7FkoiGBgmftHPO
MGZb1wdY5WVFwK8gwtmwPweSwMOoLCddey5eIMk7L2KZFciUxLR9oD1vIDetZcKl
2OWccOenb/e7A06qFTQb0yfXZQfAXGVb/k+ansHsOVHT64nGFM+Fkr1eECJ4qkpf
ilaBn3BRoOsv2igEs9eumAjWDXsibClXk635rLlBkz0N0GryoRt8rhCJZ6CFsHmW
PvZLKHgqvTwPxIu5LjKUsjqCW87voxCp2EMGI/XnQnZSsmDINit7Q0iANxLtWNt0
sHMxFRT0AalOXsbXdGkrS+9z+Hfo8jDfGrlqwNF+Gl5HKpm6vYx3pFdz0u2wiWqd
AgMBAAGjggEyMIIBLjAdBgNVHQ4EFgQUirkI0sbw8+YcockLVrXS+SEL7Pcwgf4G
A1UdIwSB9jCB84AUirkI0sbw8+YcockLVrXS+SEL7Pehgc+kgcwwgckxCzAJBgNV
BAYTAkNOMRIwEAYDVQQIEwlHdWFuZ2RvbmcxEjAQBgNVBAcTCUd1YW5nemhvdTEm
MCQGA1UEChMdR3Vhbmd6aG91IEN1c3RvbXMgRGF0YSBDZW50ZXIxIjAgBgNVBAsT
GUlUIERldmVsb3BtZW50IERlcGFydG1lbnQxHzAdBgNVBAMTFmVwb3J0Lmd6Y3Vz
dG9tcy5nb3YuY24xJTAjBgkqhkiG9w0BCQEWFmFkbWluQGd6Y3VzdG9tcy5nb3Yu
Y26CCQCtXhOvTkkKQzAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQCW
wA2LMsIyuK02FiisLFlckQ/yg9wkIVi37z83LR+m24LqHsB4j54HCkPaUCU/sWbq
fxcmPgJslEJKBiHT9JQS8AIgrP3/zov3RyA5As+dyEVBh6HTHXAjuCFdyEmhuNRG
yR0b9/MPsIncjD+DZrnkV5a2UvROZKGMS/bF6NgsV9eNrAOKZvOX55IvKytYFoTW
qZqCqEvNABMzEOGNqmbjnCAETWyTRRMyVzQTpC7KrinaWnYVzRPOOI+MCc4lNIbP
dO+ygg2k6HRG1KIzaI4/YKrc7+qAnYo0Ot0ezivfMx4Qzbbq7TXysWH1po5zRSGz
EQ7X3D8WAC54mSRvmVCh
-----END CERTIFICATE-----""", b"""-----BEGIN RSA PRIVATE KEY-----
MIIEpgIBAAKCAQEA46dRqHGeY9DDyUXdyYrH+xXePRL6cv3SogxLPmuUeegNYHzu
aM3Kp6+IQG3TLvAbd3QuAXlkz7/a79yiyhJZqhmNZzHqBd1NxR3mbDeLM2OJWFa/
2e+a17yL1TspJhmmHtH95VFsTYd1l6aSusy0uRLW4thlwVGKCKDdJop/XS2jPBWD
PkgIBheGLXElRIHu8s11cM7p2h4yakap9ZjHaugGRpgzhZDRc1uFQyeS2r4jH4//
UqEr7iP2t56qpGLo+cR4O0sp0ej5TBRUJ9f0RtdbdfdGyIj1BMNIbYtvOqyd0XnI
ic0VTJ9NAtmwodg4OHyXvMRWbncsekJQUYHwVQIDAQABAoIBAQCI/a2gzEZA0GaQ
nq9Y0V+H01/5por5WY4/n2BD/p7JQP+TuXoJrRSvFWzLQItdanVMy6fHkVI9xbis
sDtxl9tHBbtWhu3Je6OJ43U+V6o3UUVb2E/4iDvIaJhIxyH64GJbl4fOT9H5UXNM
v5r6N6bk29ZdiVSqITQL/yk1QRBlc6dEifGGGhpLMxrMURjPRz1GgqjjWdsPinb3
2qPjZfUNVsAmIaociLT4eYHwHaMsGZiuXnnWGlePxrWrxlGeFjPQXs7X6+akd4xI
QzDnd0GnX/DvvXIpRPXVEkCU/YiWFPq2Vkr2eENhnhXR4/JQEkyB32Q0tHnTpDTs
nlTDDYj9AoGBAPuk5z2pvJvi82JgjhKOUw/eJMiZhbITPVZi5wQZMkbg4m0ipq9c
736AXrv3sXYqWvdx0Iefve5sEV4uuc70HIMTu+uNL/8UVUcW1T9Yo6B8qDhlCN59
ecY5IMW6/mPMpFMmsi/4tlozlspHSPmD4gk7F1cprCuG0fPtp3A3pYubAoGBAOeY
G46JUs8DBPE+KyOwzSqQXYJQ4knBYHNSLRnuzEVUWJZPmVympfL3dqBmz/AOW59h
i3UZNbwWxmxZ8s/id6e5SnYjKPvA7oZi0bhckNq9vijC2cP3U45B3IusZyNIFjDm
nE2Xz/gtArlZ53pCp0Omlk6WvPXgSluJ8R4BtgrPAoGBAMrePFXn2tfJdPDgamjn
OGtYaUsXCUNwY0ibXyZcsb2WWrQk9T/2qlTPZJAgtX5P0xodNUHBNDtb//xvqvf+
sGWzqRHSttjrKXywGaaB7RfapzsfqLDFc0CsmZEOmTsXpXorfgdSeJ/raysToO8W
tUk/zCdGvzgv7l66PvwmwFz1AoGBAJ+p8CWeauapEDk5QQiEFY4opS74kGmE1ffr
SYi9ZzrM4Z4PFo4XngUZskD3YJgBbg09dKWwUalwki+U+59yZEfPqJQ1vUWDR26C
pk9SEdOcSINVgkhmNMa4hVIN87URN6tS8aNU7F4OufgLEVjqpuIu8SURKwjgLqNZ
QFANofFlAoGBAMCLwE6c36sQVPjV6yaOvjsaDKJoEPj8c+pOabFglJ8Fi+aALOUP
FeSGg9RH/4eRSfcwaJ1VZVuYlZaxNkwVpQyO9TuFoVQFyF/8ZGXm4q5fZUzTT0v+
XsQwc1KMdN97lplPUyRinJD67Pe65+KH3SuQrqvFlmZ4qWY7S6BoR8Zw
-----END RSA PRIVATE KEY-----""", b"""-----BEGIN CERTIFICATE-----
MIID6DCCAtACAQIwDQYJKoZIhvcNAQEFBQAwgckxCzAJBgNVBAYTAkNOMRIwEAYD
VQQIEwlHdWFuZ2RvbmcxEjAQBgNVBAcTCUd1YW5nemhvdTEmMCQGA1UEChMdR3Vh
bmd6aG91IEN1c3RvbXMgRGF0YSBDZW50ZXIxIjAgBgNVBAsTGUlUIERldmVsb3Bt
ZW50IERlcGFydG1lbnQxHzAdBgNVBAMTFmVwb3J0Lmd6Y3VzdG9tcy5nb3YuY24x
JTAjBgkqhkiG9w0BCQEWFmFkbWluQGd6Y3VzdG9tcy5nb3YuY24wHhcNMTYxMTA5
MDkwMDQ3WhcNMTkxMTA5MDkwMDQ3WjCBqTELMAkGA1UEBhMCQ04xEjAQBgNVBAgT
CUd1YW5nZG9uZzESMBAGA1UEBxMJR3Vhbmd6aG91MQ4wDAYDVQQKEwVHWkNEQzEi
MCAGA1UECxMZSVQgRGV2ZWxvcG1lbnQgRGVwYXJ0bWVudDEXMBUGA1UEAxMOVGVz
dENsaWVudENlcnQxJTAjBgkqhkiG9w0BCQEWFmFkbWluQGd6Y3VzdG9tcy5nb3Yu
Y24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDjp1GocZ5j0MPJRd3J
isf7Fd49Evpy/dKiDEs+a5R56A1gfO5ozcqnr4hAbdMu8Bt3dC4BeWTPv9rv3KLK
ElmqGY1nMeoF3U3FHeZsN4szY4lYVr/Z75rXvIvVOykmGaYe0f3lUWxNh3WXppK6
zLS5Etbi2GXBUYoIoN0min9dLaM8FYM+SAgGF4YtcSVEge7yzXVwzunaHjJqRqn1
mMdq6AZGmDOFkNFzW4VDJ5LaviMfj/9SoSvuI/a3nqqkYuj5xHg7SynR6PlMFFQn
1/RG11t190bIiPUEw0hti286rJ3ReciJzRVMn00C2bCh2Dg4fJe8xFZudyx6QlBR
gfBVAgMBAAEwDQYJKoZIhvcNAQEFBQADggEBAHmEzlGJiXdFmAEx1DIoIkljb9aq
AKHV5r46VtPuquo/6bpai9bFw93a7wFiSuSVR9Fu0rFFcNTPNyh889sBFGc9QFbA
LlLU5th9yu/aQHTXY/88NeDziZpazML5GYaX/Onvmw4jyqeGOUDTzW0Y8lfGDrvU
vXduMziT+Jia+X42fGi7u2bipShxnXPTsRlvAwPetLdETyNcMUQpO6LLqLgAUVNy
xbvY5K5LEVc2wLW8B+5sgKqbQHneDbWts1SHSaCm349QXTk8fay+Wp85xY/Djo4v
EIPEmy8vEcQxBwnagYN4QORECFfVlj0ISMXjhYn1ZOOUjUJohOGs8iK8Teo=
-----END CERTIFICATE-----""")
    channel = grpc.secure_channel('localhost:8443', credential)
    #channel = grpc.insecure_channel('localhost:50052')
    stub = entry_data_pb2.EntryDataServiceStub(channel)
    query(stub)

if __name__ == "__main__":
    run()
