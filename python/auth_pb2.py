# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: auth.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import profile_pb2 as profile__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2

from profile_pb2 import *

DESCRIPTOR = _descriptor.FileDescriptor(
  name='auth.proto',
  package='etg.auth',
  syntax='proto3',
  serialized_pb=_b('\n\nauth.proto\x12\x08\x65tg.auth\x1a\rprofile.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x18\n\x16GetCaptchaImageRequest\"A\n\x17GetCaptchaImageResponse\x12\x12\n\ncaptcha_id\x18\x01 \x01(\t\x12\x12\n\nimage_data\x18\x02 \x01(\x0c\"T\n\x19SendTokenToContactRequest\x12\x12\n\ncompany_id\x18\x01 \x01(\t\x12\x12\n\ncaptcha_id\x18\x02 \x01(\t\x12\x0f\n\x07\x63\x61ptcha\x18\x03 \x01(\t\"h\n\x1aSendTokenToContactResponse\x12\x15\n\ris_successful\x18\x01 \x01(\x08\x12\x0e\n\x06mobile\x18\x02 \x01(\t\x12\x0f\n\x07message\x18\x03 \x01(\t\x12\x12\n\ncaptcha_id\x18\x04 \x01(\t\"\xaa\x01\n\x0cLoginRequest\x12\'\n\nlogin_type\x18\x01 \x01(\x0e\x32\x13.etg.auth.LoginType\x12\r\n\x05\x65mail\x18\x02 \x01(\t\x12\x15\n\rhashed_passwd\x18\x03 \x01(\t\x12\x12\n\ncompany_id\x18\x04 \x01(\t\x12\x12\n\ncaptcha_id\x18\x05 \x01(\t\x12\r\n\x05token\x18\x06 \x01(\t\x12\x14\n\x0c\x61\x63\x63\x65ss_token\x18\x07 \x01(\t\"\xdc\x01\n\rLoginResponse\x12\x15\n\ris_successful\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x14\n\x0c\x61\x63\x63\x65ss_token\x18\x03 \x01(\t\x12\x37\n\x13timestamp_expire_at\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12&\n\x04user\x18\x05 \x01(\x0b\x32\x18.etg.profile.UserProfile\x12,\n\x07\x63ompany\x18\x06 \x01(\x0b\x32\x1b.etg.profile.CompanyProfile\"%\n\rLogoutRequest\x12\x14\n\x0c\x61\x63\x63\x65ss_token\x18\x01 \x01(\t\"\'\n\x0eLogoutResponse\x12\x15\n\ris_successful\x18\x01 \x01(\x08\"{\n\x1cRegisterWithCompanyIdRequest\x12\x12\n\ncompany_id\x18\x01 \x01(\t\x12\x12\n\ncaptcha_id\x18\x02 \x01(\t\x12\r\n\x05token\x18\x03 \x01(\t\x12\x15\n\rhashed_passwd\x18\x04 \x01(\t\x12\r\n\x05\x65mail\x18\x05 \x01(\t\"]\n\x1dRegisterWithCompanyIdResponse\x12\x15\n\ris_successful\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x14\n\x0c\x61\x63\x63\x65ss_token\x18\x03 \x01(\t\"q\n!ResetPasswordWithCompanyIdRequest\x12\x12\n\ncompany_id\x18\x01 \x01(\t\x12\x12\n\ncaptcha_id\x18\x02 \x01(\t\x12\r\n\x05token\x18\x03 \x01(\t\x12\x15\n\rhashed_passwd\x18\x04 \x01(\t\"L\n\"ResetPasswordWithCompanyIdResponse\x12\x15\n\ris_successful\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t*&\n\tLoginType\x12\t\n\x05\x45MAIL\x10\x00\x12\x0e\n\nCOMPANY_ID\x10\x01\x32\x9b\x04\n\x04\x41uth\x12X\n\x0fGetCaptchaImage\x12 .etg.auth.GetCaptchaImageRequest\x1a!.etg.auth.GetCaptchaImageResponse\"\x00\x12\x61\n\x12SendTokenToContact\x12#.etg.auth.SendTokenToContactRequest\x1a$.etg.auth.SendTokenToContactResponse\"\x00\x12:\n\x05Login\x12\x16.etg.auth.LoginRequest\x1a\x17.etg.auth.LoginResponse\"\x00\x12=\n\x06Logout\x12\x17.etg.auth.LogoutRequest\x1a\x18.etg.auth.LogoutResponse\"\x00\x12j\n\x15RegisterWithCompanyId\x12&.etg.auth.RegisterWithCompanyIdRequest\x1a\'.etg.auth.RegisterWithCompanyIdResponse\"\x00\x12o\n\x1aResetPasswordWithCompanyId\x12&.etg.auth.RegisterWithCompanyIdRequest\x1a\'.etg.auth.RegisterWithCompanyIdResponse\"\x00\x42\'\n\x08\x65tg.authB\x08\x45tgProtoP\x01\xa2\x02\x03\x45TG\xaa\x02\x08\x45tg.AuthP\x00\x62\x06proto3')
  ,
  dependencies=[profile__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_LOGINTYPE = _descriptor.EnumDescriptor(
  name='LoginType',
  full_name='etg.auth.LoginType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='EMAIL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COMPANY_ID', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1246,
  serialized_end=1284,
)
_sym_db.RegisterEnumDescriptor(_LOGINTYPE)

LoginType = enum_type_wrapper.EnumTypeWrapper(_LOGINTYPE)
EMAIL = 0
COMPANY_ID = 1



_GETCAPTCHAIMAGEREQUEST = _descriptor.Descriptor(
  name='GetCaptchaImageRequest',
  full_name='etg.auth.GetCaptchaImageRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=72,
  serialized_end=96,
)


_GETCAPTCHAIMAGERESPONSE = _descriptor.Descriptor(
  name='GetCaptchaImageResponse',
  full_name='etg.auth.GetCaptchaImageResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='captcha_id', full_name='etg.auth.GetCaptchaImageResponse.captcha_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='image_data', full_name='etg.auth.GetCaptchaImageResponse.image_data', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=98,
  serialized_end=163,
)


_SENDTOKENTOCONTACTREQUEST = _descriptor.Descriptor(
  name='SendTokenToContactRequest',
  full_name='etg.auth.SendTokenToContactRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='company_id', full_name='etg.auth.SendTokenToContactRequest.company_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='captcha_id', full_name='etg.auth.SendTokenToContactRequest.captcha_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='captcha', full_name='etg.auth.SendTokenToContactRequest.captcha', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=165,
  serialized_end=249,
)


_SENDTOKENTOCONTACTRESPONSE = _descriptor.Descriptor(
  name='SendTokenToContactResponse',
  full_name='etg.auth.SendTokenToContactResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_successful', full_name='etg.auth.SendTokenToContactResponse.is_successful', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mobile', full_name='etg.auth.SendTokenToContactResponse.mobile', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='etg.auth.SendTokenToContactResponse.message', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='captcha_id', full_name='etg.auth.SendTokenToContactResponse.captcha_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=251,
  serialized_end=355,
)


_LOGINREQUEST = _descriptor.Descriptor(
  name='LoginRequest',
  full_name='etg.auth.LoginRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='login_type', full_name='etg.auth.LoginRequest.login_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='email', full_name='etg.auth.LoginRequest.email', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hashed_passwd', full_name='etg.auth.LoginRequest.hashed_passwd', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='company_id', full_name='etg.auth.LoginRequest.company_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='captcha_id', full_name='etg.auth.LoginRequest.captcha_id', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='token', full_name='etg.auth.LoginRequest.token', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='access_token', full_name='etg.auth.LoginRequest.access_token', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=358,
  serialized_end=528,
)


_LOGINRESPONSE = _descriptor.Descriptor(
  name='LoginResponse',
  full_name='etg.auth.LoginResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_successful', full_name='etg.auth.LoginResponse.is_successful', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='etg.auth.LoginResponse.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='access_token', full_name='etg.auth.LoginResponse.access_token', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp_expire_at', full_name='etg.auth.LoginResponse.timestamp_expire_at', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='user', full_name='etg.auth.LoginResponse.user', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='company', full_name='etg.auth.LoginResponse.company', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=531,
  serialized_end=751,
)


_LOGOUTREQUEST = _descriptor.Descriptor(
  name='LogoutRequest',
  full_name='etg.auth.LogoutRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='access_token', full_name='etg.auth.LogoutRequest.access_token', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=753,
  serialized_end=790,
)


_LOGOUTRESPONSE = _descriptor.Descriptor(
  name='LogoutResponse',
  full_name='etg.auth.LogoutResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_successful', full_name='etg.auth.LogoutResponse.is_successful', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=792,
  serialized_end=831,
)


_REGISTERWITHCOMPANYIDREQUEST = _descriptor.Descriptor(
  name='RegisterWithCompanyIdRequest',
  full_name='etg.auth.RegisterWithCompanyIdRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='company_id', full_name='etg.auth.RegisterWithCompanyIdRequest.company_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='captcha_id', full_name='etg.auth.RegisterWithCompanyIdRequest.captcha_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='token', full_name='etg.auth.RegisterWithCompanyIdRequest.token', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hashed_passwd', full_name='etg.auth.RegisterWithCompanyIdRequest.hashed_passwd', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='email', full_name='etg.auth.RegisterWithCompanyIdRequest.email', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=833,
  serialized_end=956,
)


_REGISTERWITHCOMPANYIDRESPONSE = _descriptor.Descriptor(
  name='RegisterWithCompanyIdResponse',
  full_name='etg.auth.RegisterWithCompanyIdResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_successful', full_name='etg.auth.RegisterWithCompanyIdResponse.is_successful', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='etg.auth.RegisterWithCompanyIdResponse.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='access_token', full_name='etg.auth.RegisterWithCompanyIdResponse.access_token', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=958,
  serialized_end=1051,
)


_RESETPASSWORDWITHCOMPANYIDREQUEST = _descriptor.Descriptor(
  name='ResetPasswordWithCompanyIdRequest',
  full_name='etg.auth.ResetPasswordWithCompanyIdRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='company_id', full_name='etg.auth.ResetPasswordWithCompanyIdRequest.company_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='captcha_id', full_name='etg.auth.ResetPasswordWithCompanyIdRequest.captcha_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='token', full_name='etg.auth.ResetPasswordWithCompanyIdRequest.token', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hashed_passwd', full_name='etg.auth.ResetPasswordWithCompanyIdRequest.hashed_passwd', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1053,
  serialized_end=1166,
)


_RESETPASSWORDWITHCOMPANYIDRESPONSE = _descriptor.Descriptor(
  name='ResetPasswordWithCompanyIdResponse',
  full_name='etg.auth.ResetPasswordWithCompanyIdResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_successful', full_name='etg.auth.ResetPasswordWithCompanyIdResponse.is_successful', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='etg.auth.ResetPasswordWithCompanyIdResponse.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1168,
  serialized_end=1244,
)

_LOGINREQUEST.fields_by_name['login_type'].enum_type = _LOGINTYPE
_LOGINRESPONSE.fields_by_name['timestamp_expire_at'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_LOGINRESPONSE.fields_by_name['user'].message_type = profile__pb2._USERPROFILE
_LOGINRESPONSE.fields_by_name['company'].message_type = profile__pb2._COMPANYPROFILE
DESCRIPTOR.message_types_by_name['GetCaptchaImageRequest'] = _GETCAPTCHAIMAGEREQUEST
DESCRIPTOR.message_types_by_name['GetCaptchaImageResponse'] = _GETCAPTCHAIMAGERESPONSE
DESCRIPTOR.message_types_by_name['SendTokenToContactRequest'] = _SENDTOKENTOCONTACTREQUEST
DESCRIPTOR.message_types_by_name['SendTokenToContactResponse'] = _SENDTOKENTOCONTACTRESPONSE
DESCRIPTOR.message_types_by_name['LoginRequest'] = _LOGINREQUEST
DESCRIPTOR.message_types_by_name['LoginResponse'] = _LOGINRESPONSE
DESCRIPTOR.message_types_by_name['LogoutRequest'] = _LOGOUTREQUEST
DESCRIPTOR.message_types_by_name['LogoutResponse'] = _LOGOUTRESPONSE
DESCRIPTOR.message_types_by_name['RegisterWithCompanyIdRequest'] = _REGISTERWITHCOMPANYIDREQUEST
DESCRIPTOR.message_types_by_name['RegisterWithCompanyIdResponse'] = _REGISTERWITHCOMPANYIDRESPONSE
DESCRIPTOR.message_types_by_name['ResetPasswordWithCompanyIdRequest'] = _RESETPASSWORDWITHCOMPANYIDREQUEST
DESCRIPTOR.message_types_by_name['ResetPasswordWithCompanyIdResponse'] = _RESETPASSWORDWITHCOMPANYIDRESPONSE
DESCRIPTOR.enum_types_by_name['LoginType'] = _LOGINTYPE

GetCaptchaImageRequest = _reflection.GeneratedProtocolMessageType('GetCaptchaImageRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCAPTCHAIMAGEREQUEST,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:etg.auth.GetCaptchaImageRequest)
  ))
_sym_db.RegisterMessage(GetCaptchaImageRequest)

GetCaptchaImageResponse = _reflection.GeneratedProtocolMessageType('GetCaptchaImageResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETCAPTCHAIMAGERESPONSE,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:etg.auth.GetCaptchaImageResponse)
  ))
_sym_db.RegisterMessage(GetCaptchaImageResponse)

SendTokenToContactRequest = _reflection.GeneratedProtocolMessageType('SendTokenToContactRequest', (_message.Message,), dict(
  DESCRIPTOR = _SENDTOKENTOCONTACTREQUEST,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:etg.auth.SendTokenToContactRequest)
  ))
_sym_db.RegisterMessage(SendTokenToContactRequest)

SendTokenToContactResponse = _reflection.GeneratedProtocolMessageType('SendTokenToContactResponse', (_message.Message,), dict(
  DESCRIPTOR = _SENDTOKENTOCONTACTRESPONSE,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:etg.auth.SendTokenToContactResponse)
  ))
_sym_db.RegisterMessage(SendTokenToContactResponse)

LoginRequest = _reflection.GeneratedProtocolMessageType('LoginRequest', (_message.Message,), dict(
  DESCRIPTOR = _LOGINREQUEST,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:etg.auth.LoginRequest)
  ))
_sym_db.RegisterMessage(LoginRequest)

LoginResponse = _reflection.GeneratedProtocolMessageType('LoginResponse', (_message.Message,), dict(
  DESCRIPTOR = _LOGINRESPONSE,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:etg.auth.LoginResponse)
  ))
_sym_db.RegisterMessage(LoginResponse)

LogoutRequest = _reflection.GeneratedProtocolMessageType('LogoutRequest', (_message.Message,), dict(
  DESCRIPTOR = _LOGOUTREQUEST,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:etg.auth.LogoutRequest)
  ))
_sym_db.RegisterMessage(LogoutRequest)

LogoutResponse = _reflection.GeneratedProtocolMessageType('LogoutResponse', (_message.Message,), dict(
  DESCRIPTOR = _LOGOUTRESPONSE,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:etg.auth.LogoutResponse)
  ))
_sym_db.RegisterMessage(LogoutResponse)

RegisterWithCompanyIdRequest = _reflection.GeneratedProtocolMessageType('RegisterWithCompanyIdRequest', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERWITHCOMPANYIDREQUEST,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:etg.auth.RegisterWithCompanyIdRequest)
  ))
_sym_db.RegisterMessage(RegisterWithCompanyIdRequest)

RegisterWithCompanyIdResponse = _reflection.GeneratedProtocolMessageType('RegisterWithCompanyIdResponse', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERWITHCOMPANYIDRESPONSE,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:etg.auth.RegisterWithCompanyIdResponse)
  ))
_sym_db.RegisterMessage(RegisterWithCompanyIdResponse)

ResetPasswordWithCompanyIdRequest = _reflection.GeneratedProtocolMessageType('ResetPasswordWithCompanyIdRequest', (_message.Message,), dict(
  DESCRIPTOR = _RESETPASSWORDWITHCOMPANYIDREQUEST,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:etg.auth.ResetPasswordWithCompanyIdRequest)
  ))
_sym_db.RegisterMessage(ResetPasswordWithCompanyIdRequest)

ResetPasswordWithCompanyIdResponse = _reflection.GeneratedProtocolMessageType('ResetPasswordWithCompanyIdResponse', (_message.Message,), dict(
  DESCRIPTOR = _RESETPASSWORDWITHCOMPANYIDRESPONSE,
  __module__ = 'auth_pb2'
  # @@protoc_insertion_point(class_scope:etg.auth.ResetPasswordWithCompanyIdResponse)
  ))
_sym_db.RegisterMessage(ResetPasswordWithCompanyIdResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\010etg.authB\010EtgProtoP\001\242\002\003ETG\252\002\010Etg.Auth'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class AuthStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetCaptchaImage = channel.unary_unary(
        '/etg.auth.Auth/GetCaptchaImage',
        request_serializer=GetCaptchaImageRequest.SerializeToString,
        response_deserializer=GetCaptchaImageResponse.FromString,
        )
    self.SendTokenToContact = channel.unary_unary(
        '/etg.auth.Auth/SendTokenToContact',
        request_serializer=SendTokenToContactRequest.SerializeToString,
        response_deserializer=SendTokenToContactResponse.FromString,
        )
    self.Login = channel.unary_unary(
        '/etg.auth.Auth/Login',
        request_serializer=LoginRequest.SerializeToString,
        response_deserializer=LoginResponse.FromString,
        )
    self.Logout = channel.unary_unary(
        '/etg.auth.Auth/Logout',
        request_serializer=LogoutRequest.SerializeToString,
        response_deserializer=LogoutResponse.FromString,
        )
    self.RegisterWithCompanyId = channel.unary_unary(
        '/etg.auth.Auth/RegisterWithCompanyId',
        request_serializer=RegisterWithCompanyIdRequest.SerializeToString,
        response_deserializer=RegisterWithCompanyIdResponse.FromString,
        )
    self.ResetPasswordWithCompanyId = channel.unary_unary(
        '/etg.auth.Auth/ResetPasswordWithCompanyId',
        request_serializer=RegisterWithCompanyIdRequest.SerializeToString,
        response_deserializer=RegisterWithCompanyIdResponse.FromString,
        )


class AuthServicer(object):

  def GetCaptchaImage(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendTokenToContact(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Login(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Logout(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RegisterWithCompanyId(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ResetPasswordWithCompanyId(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AuthServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetCaptchaImage': grpc.unary_unary_rpc_method_handler(
          servicer.GetCaptchaImage,
          request_deserializer=GetCaptchaImageRequest.FromString,
          response_serializer=GetCaptchaImageResponse.SerializeToString,
      ),
      'SendTokenToContact': grpc.unary_unary_rpc_method_handler(
          servicer.SendTokenToContact,
          request_deserializer=SendTokenToContactRequest.FromString,
          response_serializer=SendTokenToContactResponse.SerializeToString,
      ),
      'Login': grpc.unary_unary_rpc_method_handler(
          servicer.Login,
          request_deserializer=LoginRequest.FromString,
          response_serializer=LoginResponse.SerializeToString,
      ),
      'Logout': grpc.unary_unary_rpc_method_handler(
          servicer.Logout,
          request_deserializer=LogoutRequest.FromString,
          response_serializer=LogoutResponse.SerializeToString,
      ),
      'RegisterWithCompanyId': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterWithCompanyId,
          request_deserializer=RegisterWithCompanyIdRequest.FromString,
          response_serializer=RegisterWithCompanyIdResponse.SerializeToString,
      ),
      'ResetPasswordWithCompanyId': grpc.unary_unary_rpc_method_handler(
          servicer.ResetPasswordWithCompanyId,
          request_deserializer=RegisterWithCompanyIdRequest.FromString,
          response_serializer=RegisterWithCompanyIdResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'etg.auth.Auth', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaAuthServicer(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  def GetCaptchaImage(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def SendTokenToContact(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Login(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Logout(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def RegisterWithCompanyId(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def ResetPasswordWithCompanyId(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaAuthStub(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  def GetCaptchaImage(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  GetCaptchaImage.future = None
  def SendTokenToContact(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  SendTokenToContact.future = None
  def Login(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Login.future = None
  def Logout(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Logout.future = None
  def RegisterWithCompanyId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  RegisterWithCompanyId.future = None
  def ResetPasswordWithCompanyId(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  ResetPasswordWithCompanyId.future = None


def beta_create_Auth_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_deserializers = {
    ('etg.auth.Auth', 'GetCaptchaImage'): GetCaptchaImageRequest.FromString,
    ('etg.auth.Auth', 'Login'): LoginRequest.FromString,
    ('etg.auth.Auth', 'Logout'): LogoutRequest.FromString,
    ('etg.auth.Auth', 'RegisterWithCompanyId'): RegisterWithCompanyIdRequest.FromString,
    ('etg.auth.Auth', 'ResetPasswordWithCompanyId'): RegisterWithCompanyIdRequest.FromString,
    ('etg.auth.Auth', 'SendTokenToContact'): SendTokenToContactRequest.FromString,
  }
  response_serializers = {
    ('etg.auth.Auth', 'GetCaptchaImage'): GetCaptchaImageResponse.SerializeToString,
    ('etg.auth.Auth', 'Login'): LoginResponse.SerializeToString,
    ('etg.auth.Auth', 'Logout'): LogoutResponse.SerializeToString,
    ('etg.auth.Auth', 'RegisterWithCompanyId'): RegisterWithCompanyIdResponse.SerializeToString,
    ('etg.auth.Auth', 'ResetPasswordWithCompanyId'): RegisterWithCompanyIdResponse.SerializeToString,
    ('etg.auth.Auth', 'SendTokenToContact'): SendTokenToContactResponse.SerializeToString,
  }
  method_implementations = {
    ('etg.auth.Auth', 'GetCaptchaImage'): face_utilities.unary_unary_inline(servicer.GetCaptchaImage),
    ('etg.auth.Auth', 'Login'): face_utilities.unary_unary_inline(servicer.Login),
    ('etg.auth.Auth', 'Logout'): face_utilities.unary_unary_inline(servicer.Logout),
    ('etg.auth.Auth', 'RegisterWithCompanyId'): face_utilities.unary_unary_inline(servicer.RegisterWithCompanyId),
    ('etg.auth.Auth', 'ResetPasswordWithCompanyId'): face_utilities.unary_unary_inline(servicer.ResetPasswordWithCompanyId),
    ('etg.auth.Auth', 'SendTokenToContact'): face_utilities.unary_unary_inline(servicer.SendTokenToContact),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_Auth_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_serializers = {
    ('etg.auth.Auth', 'GetCaptchaImage'): GetCaptchaImageRequest.SerializeToString,
    ('etg.auth.Auth', 'Login'): LoginRequest.SerializeToString,
    ('etg.auth.Auth', 'Logout'): LogoutRequest.SerializeToString,
    ('etg.auth.Auth', 'RegisterWithCompanyId'): RegisterWithCompanyIdRequest.SerializeToString,
    ('etg.auth.Auth', 'ResetPasswordWithCompanyId'): RegisterWithCompanyIdRequest.SerializeToString,
    ('etg.auth.Auth', 'SendTokenToContact'): SendTokenToContactRequest.SerializeToString,
  }
  response_deserializers = {
    ('etg.auth.Auth', 'GetCaptchaImage'): GetCaptchaImageResponse.FromString,
    ('etg.auth.Auth', 'Login'): LoginResponse.FromString,
    ('etg.auth.Auth', 'Logout'): LogoutResponse.FromString,
    ('etg.auth.Auth', 'RegisterWithCompanyId'): RegisterWithCompanyIdResponse.FromString,
    ('etg.auth.Auth', 'ResetPasswordWithCompanyId'): RegisterWithCompanyIdResponse.FromString,
    ('etg.auth.Auth', 'SendTokenToContact'): SendTokenToContactResponse.FromString,
  }
  cardinalities = {
    'GetCaptchaImage': cardinality.Cardinality.UNARY_UNARY,
    'Login': cardinality.Cardinality.UNARY_UNARY,
    'Logout': cardinality.Cardinality.UNARY_UNARY,
    'RegisterWithCompanyId': cardinality.Cardinality.UNARY_UNARY,
    'ResetPasswordWithCompanyId': cardinality.Cardinality.UNARY_UNARY,
    'SendTokenToContact': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'etg.auth.Auth', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
